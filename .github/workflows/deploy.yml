name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Workaround for Rollup native binary issues in CI
      ROLLUP_SKIP_NODE_NATIVE: '1'
      ROLLUP_DISABLE_NATIVE: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: app
        run: |
          # Remove lockfile to avoid optional dependency issues in CI
          rm -f package-lock.json
          rm -rf node_modules
          npm install

      - name: Install Rollup native binary (workaround)
        working-directory: app
        run: |
          npm install @rollup/rollup-linux-x64-gnu --save-dev --no-save || true

      - name: Build client bundle
        working-directory: app
        run: |
          export PAGES_BASE_PATH="KPS-interiery"
          npm run build

      - name: Save client build artifacts
        working-directory: app
        run: |
          # Save the client build artifacts before they're overwritten by static generation
          mkdir -p ../temp-build
          cp -r dist/KPS-interiery/build ../temp-build/ 2>/dev/null || echo "No build directory found"
          cp -r dist/KPS-interiery/assets ../temp-build/ 2>/dev/null || echo "No assets directory found"
          cp -r dist/KPS-interiery/*.json ../temp-build/ 2>/dev/null || echo "No JSON files found"

      - name: Generate static pages
        working-directory: app
        run: |
          export PAGES_BASE_PATH="KPS-interiery"
          npx vite build -c adapters/static/vite.config.ts

      - name: Restore client build artifacts
        working-directory: app
        run: |
          # Restore the client build artifacts to the static output
          cp -r ../temp-build/build dist/KPS-interiery/ 2>/dev/null || echo "No build directory to restore"
          cp -r ../temp-build/assets dist/KPS-interiery/ 2>/dev/null || echo "No assets directory to restore"
          cp ../temp-build/*.json dist/KPS-interiery/ 2>/dev/null || echo "No JSON files to restore" 
          
          # Copy static assets from public (directories and key files)
          cp -r public/branding dist/KPS-interiery/ || true
          cp -r public/images dist/KPS-interiery/ || true
          cp -f public/manifest.json dist/KPS-interiery/manifest.json || true
          cp -f public/robots.txt dist/KPS-interiery/robots.txt || true
          
          # Add .nojekyll to prevent Jekyll processing
          touch dist/KPS-interiery/.nojekyll
          
          echo "Final deployment directory contents:"
          ls -la dist/KPS-interiery/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'app/dist/KPS-interiery'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
