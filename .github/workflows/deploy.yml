name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ROLLUP_SKIP_NODE_NATIVE: '1'
      ROLLUP_DISABLE_NATIVE: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # Disable npm caching to avoid stale optional deps causing Rollup native issues
          cache: ''

      - name: Upgrade npm to latest
        run: npm i -g npm@latest

      - name: Install dependencies
        working-directory: app
        run: |
          # Fresh install without lockfile so optional platform deps resolve on Linux
          rm -f package-lock.json
          rm -rf node_modules
          npm install

      - name: "Workaround: ensure Rollup native binary is present"
        working-directory: app
        run: |
          npm i @rollup/rollup-linux-x64-gnu --no-save || true

      - name: Build
        working-directory: app
        run: |
          REPO_NAME='${{ github.event.repository.name }}'
          OWNER='${{ github.repository_owner }}'
          if [ "$REPO_NAME" = "${OWNER}.github.io" ]; then
            export PAGES_BASE_PATH=""
          else
            export PAGES_BASE_PATH="$REPO_NAME"
          fi
          export GITHUB_PAGES=true
          # Build fully static site via Qwik City static adapter
          npm run build:static

      - name: Prepare deployment directory
        working-directory: app
        run: |
          REPO_NAME='${{ github.event.repository.name }}'
          OWNER='${{ github.repository_owner }}'
          if [ "$REPO_NAME" = "${OWNER}.github.io" ]; then
            DIST_PATH="dist"
          else
            DIST_PATH="dist/$REPO_NAME"
          fi
          
          echo "Deployment files location: $DIST_PATH"
          ls -la "$DIST_PATH" || echo "Directory not found"
          
          # Create 404.html for SPA fallback
          if [ -f "$DIST_PATH/index.html" ]; then
            cp "$DIST_PATH/index.html" "$DIST_PATH/404.html"
          else
            echo "Skipping 404.html creation: $DIST_PATH/index.html not found"
          fi
          
          # Copy static files (favicon/manifest/robots)
          cp -f public/favicon.svg "$DIST_PATH/favicon.svg" || true
          cp -f public/manifest.json "$DIST_PATH/manifest.json" || true
          cp -f public/robots.txt "$DIST_PATH/robots.txt" || true
          
          # Add .nojekyll
          touch "$DIST_PATH/.nojekyll"

      - name: Include CNAME if present (custom domain)
        run: |
          REPO_NAME='${{ github.event.repository.name }}'
          OWNER='${{ github.repository_owner }}'
          if [ "$REPO_NAME" = "${OWNER}.github.io" ]; then
            DIST_PATH="app/dist"
          else
            DIST_PATH="app/dist/$REPO_NAME"
          fi
          
          if [ -f CNAME ]; then cp -f CNAME "$DIST_PATH/CNAME"; fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.event.repository.name == format('{0}.github.io', github.repository_owner) && 'app/dist' || format('app/dist/{0}', github.event.repository.name) }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
