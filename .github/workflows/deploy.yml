name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ROLLUP_SKIP_NODE_NATIVE: '1'
      ROLLUP_DISABLE_NATIVE: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # Disable npm caching to avoid stale optional deps causing Rollup native issues
          cache: ''

      - name: Upgrade npm to latest
        run: npm i -g npm@latest

      - name: Install dependencies
        working-directory: app
        run: |
          # Fresh install without lockfile so optional platform deps resolve on Linux
          rm -f package-lock.json
          rm -rf node_modules
          npm install

      - name: "Workaround: ensure Rollup native binary is present"
        working-directory: app
        run: |
          npm i @rollup/rollup-linux-x64-gnu --no-save || true

      - name: Build
        working-directory: app
        run: |
          REPO_NAME='${{ github.event.repository.name }}'
          OWNER='${{ github.repository_owner }}'
          if [ "$REPO_NAME" = "${OWNER}.github.io" ]; then
            export PAGES_BASE_PATH=""
          else
            export PAGES_BASE_PATH="$REPO_NAME"
          fi
          export GITHUB_PAGES=true
          npm run build
          # Ensure a static index.html exists for Pages; if Qwik build did not output it, run client build
          if [ ! -f dist/index.html ]; then
            echo "dist/index.html not found after qwik build; running client build"
            npm run build.client
          fi

      - name: Create 404.html for SPA fallback
        working-directory: app
        run: |
          if [ -f dist/index.html ]; then
            cp dist/index.html dist/404.html
          else
            echo "Skipping 404.html creation: dist/index.html not found"
          fi

      - name: Copy static files (favicon/manifest/robots)
        working-directory: app
        run: |
          cp -f public/favicon.svg dist/favicon.svg || true
          cp -f public/manifest.json dist/manifest.json || true
          cp -f public/robots.txt dist/robots.txt || true

      - name: Include CNAME if present (custom domain)
        run: |
          if [ -f CNAME ]; then cp -f CNAME app/dist/CNAME; fi

      - name: Add .nojekyll
        working-directory: app
        run: touch dist/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: app/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
